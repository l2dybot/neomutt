From 8bf37106fd4ec9b2ef122711ac2938564688ec5e Mon Sep 17 00:00:00 2001
From: Kevin McCarthy <kevin@8t8.us>
Date: Wed, 29 Jan 2020 15:09:59 -0800
Subject: Create send.h header

This will hold the send context, so we may as well pull the prototypes
into the header file too.

Upstream-commit: https://gitlab.com/muttmua/mutt/commit/8bf37106fd4ec9b2ef122711ac2938564688ec5e
Co-authored-by: Richard Russon <rich@flatcap.org>
---
 Makefile.autosetup           |  2 +-
 autocrypt/autocrypt.c |  1 +
 index.c           |  1 +
 address/group.c               |  1 +
 main.c                |  2 ++
 pager.c               |  2 ++
 protos.h              | 18 ------------------
 query.c               |  1 +
 recvcmd.c             |  1 +
 send.c                |  5 +++--
 send.h                | 39 +++++++++++++++++++++++++++++++++++++++
 sendlib.c             |  1 +
 ncrypt/smime.c               |  1 +
 13 files changed, 54 insertions(+), 21 deletions(-)
 create mode 100644 send.h

diff --git a/Makefile.autosetup b/Makefile.autosetup
index e46f6544..b973b557 100644
--- a/Makefile.autosetup
+++ b/Makefile.autosetup
@@ -77,7 +77,7 @@ EXTRA_DIST = COPYRIGHT GPL OPS OPS.PGP OPS.CRYPT OPS.SMIME TODO UPDATING \
         rfc2231.h rfc822.h rfc3676.h sha1.h sort.h mime.types VERSION prepare \
         _mutt_regex.h OPS.MIX README.SECURITY remailer.c remailer.h browser.h \
         mbyte.h lib.h extlib.c pgpewrap.c smime_keys.pl pgplib.h \
-        README.SSL smime.h group.h mutt_zstrm.h \
+        README.SSL smime.h group.h mutt_zstrm.h send.h \
         muttbug pgppacket.h depcomp ascii.h BEWARE PATCHES patchlist.sh \
         ChangeLog mkchangelog.sh mkreldate.sh mutt_idna.h sidebar.h OPS.SIDEBAR \
         snprintf.c mutt/regex.c crypt_gpgme.h hcachever.pl \
diff --git a/autocrypt/autocrypt.c b/autocrypt/autocrypt.c
index 7a3be260..628f0d46 100644
--- a/autocrypt/autocrypt.c
+++ b/autocrypt/autocrypt.c
@@ -26,6 +26,7 @@
 #include "mime.h"
 #include "mutt_idna.h"
 #include "mailbox.h"
+#include "send.h"
 #include "autocrypt.h"
 #include "autocrypt_private.h"
 
diff --git a/index.c b/index.c
index 6f833a81..fe83bd40 100644
--- a/index.c
+++ b/index.c
@@ -28,6 +28,7 @@
 #include "sort.h"
 #include "mailbox.h"
 #include "mx.h"
+#include "send.h"
 
 #ifdef USE_SIDEBAR
 #include "sidebar.h"
diff --git a/address/group.c b/address/group.c
index f37f52a0..1bcd3793 100644
--- a/address/group.c
+++ b/address/group.c
@@ -26,6 +26,7 @@
 #include "mutt_regex.h"
 #include "mbyte.h"
 #include "charset.h"
+#include "send.h"
 
 #include <ctype.h>
 #include <stdlib.h>
diff --git a/main.c b/main.c
index 413c44de..3c3e22de 100644
--- a/main.c
+++ b/main.c
@@ -31,6 +31,8 @@
 #include "url.h"
 #include "mutt_crypt.h"
 #include "mutt_idna.h"
+#include "send.h"
+
 #ifdef USE_SIDEBAR
 #include "sidebar.h"
 #endif
diff --git a/pager.c b/pager.c
index 4e29c289..65678bb4 100644
--- a/pager.c
+++ b/pager.c
@@ -31,6 +31,8 @@
 #include "mbyte.h"
 #include "sort.h"
 #include "mailbox.h"
+#include "send.h"
+
 #ifdef USE_SIDEBAR
 #include "sidebar.h"
 #endif
diff --git a/protos.h b/protos.h
index 3f271c30..c8c79428 100644
--- a/protos.h
+++ b/protos.h
@@ -82,11 +82,9 @@ int quadoption(int);
 
 char* mutt_extract_message_id(const char *, const char **);
 
-struct Address *mutt_default_from(void);
 struct Address *mutt_get_address(struct Envelope *, char **);
 struct Address *mutt_alias_lookup(const char *s);
 struct Address *mutt_addrlist_dedupe(struct Address *);
-struct Address *mutt_remove_xrefs(struct Address *, struct Address *);
 struct Address *mutt_expand_aliases(struct Address *);
 struct Address *mutt_addr_parse_list2(struct Address *, const char *);
 
@@ -108,8 +106,6 @@ struct Content *mutt_get_content_info(const char *fname, struct Body *b);
 struct Hash *mutt_make_id_hash(struct Context *);
 struct Hash *make_subj_hash(struct Context *);
 
-struct ListHead *make_references(struct Envelope *e);
-
 char *mutt_rfc822_read_line(FILE *, char *, size_t *);
 struct Envelope *mutt_rfc822_read_header(FILE *, struct Email *, short, short);
 struct Email *mutt_dup_header(struct Email *);
@@ -166,7 +162,6 @@ struct Group *mutt_pattern_group(const char *);
 struct Regex *mutt_compile_regexp(const char *, int);
 
 void mutt_account_hook(const char* url);
-void mutt_add_to_reference_headers(struct Envelope *env, struct Envelope *curenv, struct ListHead ***pp, struct ListHead ***qq);
 void mutt_adv_mktemp(struct Buffer *);
 void mutt_alias_menu(char *, size_t, struct Alias *);
 void mutt_sig_allow_interrupt(int);
@@ -208,7 +203,6 @@ void mutt_label_hash_remove(struct Context *ctx, struct Email *hdr);
 int mutt_label_complete(char *, size_t, int);
 void mutt_curses_error(const char *, ...);
 void mutt_curses_message(const char *, ...);
-void mutt_encode_descriptions(struct Body *, short);
 void mutt_encode_path(struct Buffer *, const char *);
 void mutt_enter_command(void);
 void mutt_error_history_display(void);
@@ -216,13 +210,10 @@ void mutt_error_history_init(void);
 void mutt_expand_aliases_env(struct Envelope *);
 void mutt_file_expand_fmt_quote(struct Buffer *, const char *, const char *);
 void mutt_file_expand_fmt(struct Buffer *, const char *, const char *);
-void mutt_fix_reply_recipients(struct Envelope *env);
 void mutt_folder_hook(const char *);
 void mutt_simple_format(char *, size_t, int, int, int, char, const char *, size_t, int);
 void mutt_format_s(char *, size_t, const char *, const char *);
 void mutt_format_s_tree(char *, size_t, const char *, const char *);
-void mutt_forward_intro(struct Context *ctx, struct Email *cur, FILE *fp);
-void mutt_forward_trailer(struct Context *ctx, struct Email *cur, FILE *fp);
 void mutt_alias_free(struct Alias **);
 #ifdef USE_AUTOCRYPT
 void mutt_free_autocrypthdr(struct AutocryptHeader **p);
@@ -240,11 +231,7 @@ void mutt_help(int);
 const char *mutt_idxfmt_hook(const char *, struct Context *, struct Email *);
 void mutt_draw_tree(struct Context *);
 void mutt_check_lookup_list(struct Body *, char *, size_t);
-void mutt_make_attribution(struct Context *ctx, struct Email *cur, FILE *out);
-void mutt_make_forward_subject(struct Envelope *env, struct Context *ctx, struct Email *cur);
 void mutt_make_help(char *, size_t, const char *, int, int);
-void mutt_make_misc_reply_headers(struct Envelope *env, struct Context *ctx, struct Email *cur, struct Envelope *curenv);
-void mutt_make_post_indent(struct Context *ctx, struct Email *cur, FILE *out);
 void mutt_env_merge(struct Envelope* base, struct Envelope** extra);
 void mutt_message_to_7bit(struct Body *, FILE *);
 #define mutt_buffer_mktemp(a) mutt_buffer_mktemp_pfx_sfx(a, "mutt", NULL)
@@ -281,7 +268,6 @@ void _mutt_buffer_select_file(struct Buffer *, int, char ***, int *);
 void mutt_message_hook(struct Context *, struct Email *, int);
 void _mutt_set_flag(struct Context *, struct Email *, int, int, int);
 #define mutt_set_flag(a,b,c,d) _mutt_set_flag(a,b,c,d,1)
-void mutt_set_followup_to(struct Envelope *);
 void mutt_shell_escape(void);
 void mutt_show_error(void);
 void mutt_signal_init(void);
@@ -326,15 +312,12 @@ int mutt_decode_save_attachment(FILE *, struct Body *, const char *, int, int);
 int mutt_display_message(struct Email *h);
 int mutt_dump_variables(void);
 int mutt_edit_attachment(struct Body *);
-int mutt_edit_address(struct Address **, const char *, int);
 int mutt_edit_message(struct Context *, struct Email *);
-int mutt_fetch_recips(struct Envelope *out, struct Envelope *in, int flags);
 int mutt_cs_chscmp(const char *s, const char *chs);
 #define mutt_cs_is_utf8(a) mutt_cs_chscmp(a, "utf-8")
 #define mutt_cs_is_us_ascii(a) mutt_cs_chscmp(a, "us-ascii")
 int mutt_parent_message(struct Context *, struct Email *, int);
 int mutt_prepare_template(FILE*, struct Context *, struct Email *, struct Email *, short);
-int mutt_resend_message(FILE *, struct Context *, struct Email *);
 #define mutt_buffer_enter_fname(A,B,C) _mutt_buffer_enter_fname(A,B,C,0,NULL,NULL)
 int _mutt_buffer_enter_fname(const char *, struct Buffer *, int, int, char ***, int *);
 #define mutt_enter_fname(A,B,C,D) _mutt_enter_fname(A,B,C,D,0,NULL,NULL)
@@ -580,7 +563,6 @@ int ioctl(int, int, ...);
 
 /* unsorted */
 void ci_bounce_message(struct Email *);
-int ci_send_message(int, struct Email *, const char *, struct Context *, struct Email *);
 
 /* prototypes for compatibility functions */
 
diff --git a/query.c b/query.c
index 2d647ef2..741c3762 100644
--- a/query.c
+++ b/query.c
@@ -24,6 +24,7 @@
 #include "mutt_menu.h"
 #include "mutt_idna.h"
 #include "mapping.h"
+#include "send.h"
 
 #include <string.h>
 #include <stdlib.h>
diff --git a/recvcmd.c b/recvcmd.c
index 9bf3c3b0..566f1d97 100644
--- a/recvcmd.c
+++ b/recvcmd.c
@@ -30,6 +30,7 @@
 #include "mapping.h"
 #include "copy.h"
 #include "mutt_idna.h"
+#include "send.h"
 
 /* some helper functions to verify that we are exclusively operating
  * on message/rfc822 attachments
diff --git a/send.c b/send.c
index 11e94b1b..709e89f4 100644
--- a/send.c
+++ b/send.c
@@ -32,6 +32,7 @@
 #include "url.h"
 #include "rfc3676.h"
 #include "attach.h"
+#include "send.h"
 
 #ifdef USE_AUTOCRYPT
 #include "autocrypt.h"
@@ -468,7 +469,7 @@ cleanup:
   return rc;
 }
 
-int mutt_inline_forward(struct Context *ctx, struct Email *msg, struct Email *cur, FILE *out)
+static int mutt_inline_forward(struct Context *ctx, struct Email *msg, struct Email *cur, FILE *out)
 {
   int i, forwardq = -1;
   struct Body **last;
@@ -689,7 +690,7 @@ int mutt_fetch_recips(struct Envelope *out, struct Envelope *in, int flags)
   return 0;
 }
 
-struct ListHead *make_references(struct Envelope *e)
+static struct ListHead *make_references(struct Envelope *e)
 {
   struct ListHead *t = NULL, *l = NULL;
 
diff --git a/send.h b/send.h
new file mode 100644
index 00000000..e809e0cd
--- /dev/null
+++ b/send.h
@@ -0,0 +1,39 @@
+/*
+ * Copyright(C) 2020 Kevin J. McCarthy <kevin@8t8.us>
+ *
+ *     This program is free software; you can redistribute it and/or modify
+ *     it under the terms of the GNU General Public License as published by
+ *     the Free Software Foundation; either version 2 of the License, or
+ *    (at your option) any later version.
+ *
+ *     This program is distributed in the hope that it will be useful,
+ *     but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *     GNU General Public License for more details.
+ *
+ *     You should have received a copy of the GNU General Public License
+ *     along with this program; if not, write to the Free Software
+ *     Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#ifndef _SEND_H
+#define _SEND_H 1
+
+struct Address *mutt_remove_xrefs(struct Address *, struct Address *);
+int mutt_edit_address(struct Address **, const char *, int);
+void mutt_forward_intro(struct Context *ctx, struct Email *cur, FILE *fp);
+void mutt_forward_trailer(struct Context *ctx, struct Email *cur, FILE *fp);
+void mutt_make_attribution(struct Context *ctx, struct Email *cur, FILE *out);
+void mutt_make_post_indent(struct Context *ctx, struct Email *cur, FILE *out);
+int mutt_fetch_recips(struct Envelope *out, struct Envelope *in, int flags);
+void mutt_fix_reply_recipients(struct Envelope *env);
+void mutt_make_forward_subject(struct Envelope *env, struct Context *ctx, struct Email *cur);
+void mutt_make_misc_reply_headers(struct Envelope *env, struct Context *ctx, struct Email *cur, struct Envelope *curenv);
+void mutt_add_to_reference_headers(struct Envelope *env, struct Envelope *curenv, struct ListHead ***pp, struct ListHead ***qq);
+void mutt_set_followup_to(struct Envelope *);
+struct Address *mutt_default_from(void);
+void mutt_encode_descriptions(struct Body *, short);
+int mutt_resend_message(FILE *, struct Context *, struct Email *);
+int ci_send_message(int, struct Email *, const char *, struct Context *, struct Email *);
+
+#endif
diff --git a/sendlib.c b/sendlib.c
index 3422d0aa..3bc1553f 100644
--- a/sendlib.c
+++ b/sendlib.c
@@ -36,6 +36,7 @@
 #include "mutt_crypt.h"
 #include "mutt_idna.h"
 #include "mailbox.h"
+#include "send.h"
 
 #ifdef USE_AUTOCRYPT
 #include "autocrypt.h"
diff --git a/ncrypt/smime.c b/ncrypt/smime.c
index 0ee56535..8ed33008 100644
--- a/ncrypt/smime.c
+++ b/ncrypt/smime.c
@@ -28,6 +28,7 @@
 #include "smime.h"
 #include "mime.h"
 #include "copy.h"
+#include "send.h"
 
 #include <sys/wait.h>
 #include <string.h>
